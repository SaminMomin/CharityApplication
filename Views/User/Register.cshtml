@model CharityApplication.Database.user

@{
    ViewBag.Title = "Register";
}

<h2>Register User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    

<div class="form-horizontal ">
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>
    <br />
    <div class="text-xl-center">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>

</div>
}

